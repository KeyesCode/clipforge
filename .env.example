# ClipForge Master Environment Configuration
# Copy this file to .env and update the values for your environment

# =============================================================================
# INFRASTRUCTURE SERVICES
# =============================================================================

# Redis Configuration
REDIS_PASSWORD=redis_secure_password_2024
REDIS_URL=redis://:redis_secure_password_2024@localhost:6379

# PostgreSQL Configuration
POSTGRES_DB=clipforge
POSTGRES_USER=clipforge
POSTGRES_PASSWORD=clipforge123
POSTGRES_PORT=5432
DATABASE_URL=postgresql://clipforge:clipforge123@localhost:5432/clipforge

# =============================================================================
# CORE APPLICATION SERVICES
# =============================================================================

# Orchestrator Service
ORCHESTRATOR_PORT=3001
NODE_ENV=development

# Web UI
WEB_PORT=3000
NEXT_PUBLIC_API_URL=http://localhost:3001/api
NEXT_PUBLIC_WS_URL=ws://localhost:3001
NEXTAUTH_SECRET=your-nextauth-secret-key
NEXTAUTH_URL=http://localhost:3000

# =============================================================================
# PYTHON MICROSERVICES
# =============================================================================

# Ingest Service
INGEST_SERVICE_PORT=8001
INGEST_STORAGE_PATH=/tmp/clipforge/storage
INGEST_CHUNK_DURATION=300
INGEST_MAX_CONCURRENT_DOWNLOADS=3

# ASR Service
ASR_SERVICE_PORT=8002
ASR_WHISPER_MODEL_SIZE=base
ASR_WHISPER_DEVICE=auto
ASR_WHISPER_COMPUTE_TYPE=int8
ASR_CHUNK_STORAGE_PATH=/tmp/clipforge/chunks
ASR_TRANSCRIPTION_STORAGE_PATH=/tmp/clipforge/transcriptions
ASR_MAX_CONCURRENT_JOBS=2

# Vision Service
VISION_SERVICE_PORT=8003
VISION_CHUNK_STORAGE_PATH=/tmp/clipforge/chunks
VISION_ANALYSIS_STORAGE_PATH=/tmp/clipforge/analysis
VISION_FACE_MODEL_NAME=buffalo_l
VISION_MAX_CONCURRENT_JOBS=2
VISION_SCENE_THRESHOLD=30.0
VISION_MIN_SCENE_LENGTH=3.0

# Scoring Service
SCORING_SERVICE_PORT=8004
# Note: Redis config is in services/scoring_svc/config/scoring.yaml

# Render Service
RENDER_SERVICE_PORT=8005
RENDER_CLIPS_STORAGE_PATH=/tmp/clipforge/clips
RENDER_TEMP_RENDER_PATH=/tmp/clipforge/temp_render
RENDER_FONTS_PATH=/usr/share/fonts
RENDER_MAX_CONCURRENT_RENDERS=2
RENDER_DEFAULT_FONT_SIZE=36
RENDER_DEFAULT_RESOLUTION=1920x1080

# =============================================================================
# SERVICE URLS (for inter-service communication)
# =============================================================================

ORCHESTRATOR_URL=http://localhost:3001
INGEST_SERVICE_URL=http://localhost:8001
ASR_SERVICE_URL=http://localhost:8002
VISION_SERVICE_URL=http://localhost:8003
SCORING_SERVICE_URL=http://localhost:8004
RENDER_SERVICE_URL=http://localhost:8005

# =============================================================================
# PROCESSING CONFIGURATION
# =============================================================================

# Job Processing
MAX_CONCURRENT_JOBS=3
JOB_TIMEOUT=3600

# Storage Paths
STORAGE_PATH=/tmp/clipforge/storage
TEMP_DIR=/tmp/clipforge/temp

# =============================================================================
# SOCIAL MEDIA INTEGRATION (Optional)
# =============================================================================

# YouTube API
YOUTUBE_CLIENT_ID=your_youtube_client_id
YOUTUBE_CLIENT_SECRET=your_youtube_client_secret
YOUTUBE_REDIRECT_URI=http://localhost:3000/auth/youtube/callback

# Twitter/X API
TWITTER_API_KEY=your_twitter_api_key
TWITTER_API_SECRET=your_twitter_api_secret
TWITTER_ACCESS_TOKEN=your_twitter_access_token
TWITTER_ACCESS_SECRET=your_twitter_access_secret
TWITTER_BEARER_TOKEN=your_twitter_bearer_token

# =============================================================================
# DEVELOPMENT NOTES
# =============================================================================

# For local development:
# 1. Copy this file to .env
# 2. Update Redis password to match your setup
# 3. Create storage directories: mkdir -p /tmp/clipforge/{storage,chunks,analysis,clips,temp_render,transcriptions}
# 4. Start services with: docker compose up postgres redis
# 5. Run Python services individually with their .env files
